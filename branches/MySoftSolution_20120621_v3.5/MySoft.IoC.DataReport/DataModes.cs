//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5466
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MySoft.IoC.DataReport.Models
{
    using System;


    /// <summary>
    /// 表名：ServerConfig 主键列：Id
    /// </summary>
    [SerializableAttribute()]
    public partial class ServerConfig : MySoft.Data.Entity
    {

        protected Int32 _Id;

        protected String _Namespace;

        protected String _ServiceName;

        protected String _NodeKey;

        protected DateTime _AddTime;

        public Int32 Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnPropertyValueChange(_.Id, _Id, value);
                this._Id = value;
            }
        }

        public String Namespace
        {
            get
            {
                return this._Namespace;
            }
            set
            {
                this.OnPropertyValueChange(_.Namespace, _Namespace, value);
                this._Namespace = value;
            }
        }

        public String ServiceName
        {
            get
            {
                return this._ServiceName;
            }
            set
            {
                this.OnPropertyValueChange(_.ServiceName, _ServiceName, value);
                this._ServiceName = value;
            }
        }

        public String NodeKey
        {
            get
            {
                return this._NodeKey;
            }
            set
            {
                this.OnPropertyValueChange(_.NodeKey, _NodeKey, value);
                this._NodeKey = value;
            }
        }

        public DateTime AddTime
        {
            get
            {
                return this._AddTime;
            }
            set
            {
                this.OnPropertyValueChange(_.AddTime, _AddTime, value);
                this._AddTime = value;
            }
        }

        /// <summary>
        /// 获取实体对应的表名
        /// </summary>
        protected override MySoft.Data.Table GetTable()
        {
            return new MySoft.Data.Table<ServerConfig>("ServerConfig");
        }

        /// <summary>
        /// 获取实体中的标识列
        /// </summary>
        protected override MySoft.Data.Field GetIdentityField()
        {
            return _.Id;
        }

        /// <summary>
        /// 获取实体中的主键列
        /// </summary>
        protected override MySoft.Data.Field[] GetPrimaryKeyFields()
        {
            return new MySoft.Data.Field[] {
    					_.Id};
        }

        /// <summary>
        /// 获取列信息
        /// </summary>
        protected override MySoft.Data.Field[] GetFields()
        {
            return new MySoft.Data.Field[] {
    					_.Id,
    					_.Namespace,
    					_.ServiceName,
    					_.NodeKey,
    					_.AddTime};
        }

        /// <summary>
        /// 获取列数据
        /// </summary>
        protected override object[] GetValues()
        {
            return new object[] {
    					this._Id,
    					this._Namespace,
    					this._ServiceName,
    					this._NodeKey,
    					this._AddTime};
        }

        /// <summary>
        /// 给当前实体赋值
        /// </summary>
        protected override void SetValues(MySoft.Data.IRowReader reader)
        {
            if ((false == reader.IsDBNull(_.Id)))
            {
                this._Id = reader.GetInt32(_.Id);
            }
            if ((false == reader.IsDBNull(_.Namespace)))
            {
                this._Namespace = reader.GetString(_.Namespace);
            }
            if ((false == reader.IsDBNull(_.ServiceName)))
            {
                this._ServiceName = reader.GetString(_.ServiceName);
            }
            if ((false == reader.IsDBNull(_.NodeKey)))
            {
                this._NodeKey = reader.GetString(_.NodeKey);
            }
            if ((false == reader.IsDBNull(_.AddTime)))
            {
                this._AddTime = reader.GetDateTime(_.AddTime);
            }
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(ServerConfig).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return false;
        }

        public class _
        {

            /// <summary>
            /// 表示选择所有列，与*等同
            /// </summary>
            public static MySoft.Data.AllField All = new MySoft.Data.AllField<ServerConfig>();

            /// <summary>
            /// 字段名：Id - 数据类型：Int32
            /// </summary>
            public static MySoft.Data.Field Id = new MySoft.Data.Field<ServerConfig>("Id");

            /// <summary>
            /// 字段名：Namespace - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field Namespace = new MySoft.Data.Field<ServerConfig>("Namespace");

            /// <summary>
            /// 字段名：ServiceName - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field ServiceName = new MySoft.Data.Field<ServerConfig>("ServiceName");

            /// <summary>
            /// 字段名：NodeKey - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field NodeKey = new MySoft.Data.Field<ServerConfig>("NodeKey");

            /// <summary>
            /// 字段名：AddTime - 数据类型：DateTime
            /// </summary>
            public static MySoft.Data.Field AddTime = new MySoft.Data.Field<ServerConfig>("AddTime");
        }
    }
}
namespace MySoft.IoC.DataReport.Models
{
    using System;


    /// <summary>
    /// 表名：ServerNode 主键列：Key
    /// </summary>
    [SerializableAttribute()]
    public partial class ServerNode : MySoft.Data.Entity
    {

        protected String _Key;

        protected String _IPAddress;

        protected Int32 _Port;

        protected Int32 _Timeout;

        protected Int32 _MaxPool;

        protected Int32 _MinPool;

        protected Int32 _RespType;

        protected Boolean _Compress;

        protected Boolean _IsDefault;

        protected DateTime _AddTime;

        public String Key
        {
            get
            {
                return this._Key;
            }
            set
            {
                this.OnPropertyValueChange(_.Key, _Key, value);
                this._Key = value;
            }
        }

        public String IPAddress
        {
            get
            {
                return this._IPAddress;
            }
            set
            {
                this.OnPropertyValueChange(_.IPAddress, _IPAddress, value);
                this._IPAddress = value;
            }
        }

        public Int32 Port
        {
            get
            {
                return this._Port;
            }
            set
            {
                this.OnPropertyValueChange(_.Port, _Port, value);
                this._Port = value;
            }
        }

        public Int32 Timeout
        {
            get
            {
                return this._Timeout;
            }
            set
            {
                this.OnPropertyValueChange(_.Timeout, _Timeout, value);
                this._Timeout = value;
            }
        }

        public Int32 MaxPool
        {
            get
            {
                return this._MaxPool;
            }
            set
            {
                this.OnPropertyValueChange(_.MaxPool, _MaxPool, value);
                this._MaxPool = value;
            }
        }

        public Int32 MinPool
        {
            get
            {
                return this._MinPool;
            }
            set
            {
                this.OnPropertyValueChange(_.MinPool, _MinPool, value);
                this._MinPool = value;
            }
        }

        public Int32 RespType
        {
            get
            {
                return this._RespType;
            }
            set
            {
                this.OnPropertyValueChange(_.RespType, _RespType, value);
                this._RespType = value;
            }
        }

        public Boolean Compress
        {
            get
            {
                return this._Compress;
            }
            set
            {
                this.OnPropertyValueChange(_.Compress, _Compress, value);
                this._Compress = value;
            }
        }

        public Boolean IsDefault
        {
            get
            {
                return this._IsDefault;
            }
            set
            {
                this.OnPropertyValueChange(_.IsDefault, _IsDefault, value);
                this._IsDefault = value;
            }
        }

        public DateTime AddTime
        {
            get
            {
                return this._AddTime;
            }
            set
            {
                this.OnPropertyValueChange(_.AddTime, _AddTime, value);
                this._AddTime = value;
            }
        }

        /// <summary>
        /// 获取实体对应的表名
        /// </summary>
        protected override MySoft.Data.Table GetTable()
        {
            return new MySoft.Data.Table<ServerNode>("ServerNode");
        }

        /// <summary>
        /// 获取实体中的主键列
        /// </summary>
        protected override MySoft.Data.Field[] GetPrimaryKeyFields()
        {
            return new MySoft.Data.Field[] {
    					_.Key};
        }

        /// <summary>
        /// 获取列信息
        /// </summary>
        protected override MySoft.Data.Field[] GetFields()
        {
            return new MySoft.Data.Field[] {
    					_.Key,
    					_.IPAddress,
    					_.Port,
    					_.Timeout,
    					_.MaxPool,
    					_.MinPool,
    					_.RespType,
    					_.Compress,
    					_.IsDefault,
    					_.AddTime};
        }

        /// <summary>
        /// 获取列数据
        /// </summary>
        protected override object[] GetValues()
        {
            return new object[] {
    					this._Key,
    					this._IPAddress,
    					this._Port,
    					this._Timeout,
    					this._MaxPool,
    					this._MinPool,
    					this._RespType,
    					this._Compress,
    					this._IsDefault,
    					this._AddTime};
        }

        /// <summary>
        /// 给当前实体赋值
        /// </summary>
        protected override void SetValues(MySoft.Data.IRowReader reader)
        {
            if ((false == reader.IsDBNull(_.Key)))
            {
                this._Key = reader.GetString(_.Key);
            }
            if ((false == reader.IsDBNull(_.IPAddress)))
            {
                this._IPAddress = reader.GetString(_.IPAddress);
            }
            if ((false == reader.IsDBNull(_.Port)))
            {
                this._Port = reader.GetInt32(_.Port);
            }
            if ((false == reader.IsDBNull(_.Timeout)))
            {
                this._Timeout = reader.GetInt32(_.Timeout);
            }
            if ((false == reader.IsDBNull(_.MaxPool)))
            {
                this._MaxPool = reader.GetInt32(_.MaxPool);
            }
            if ((false == reader.IsDBNull(_.MinPool)))
            {
                this._MinPool = reader.GetInt32(_.MinPool);
            }
            if ((false == reader.IsDBNull(_.RespType)))
            {
                this._RespType = reader.GetInt32(_.RespType);
            }
            if ((false == reader.IsDBNull(_.Compress)))
            {
                this._Compress = reader.GetBoolean(_.Compress);
            }
            if ((false == reader.IsDBNull(_.IsDefault)))
            {
                this._IsDefault = reader.GetBoolean(_.IsDefault);
            }
            if ((false == reader.IsDBNull(_.AddTime)))
            {
                this._AddTime = reader.GetDateTime(_.AddTime);
            }
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(ServerNode).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return false;
        }

        public class _
        {

            /// <summary>
            /// 表示选择所有列，与*等同
            /// </summary>
            public static MySoft.Data.AllField All = new MySoft.Data.AllField<ServerNode>();

            /// <summary>
            /// 字段名：Key - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field Key = new MySoft.Data.Field<ServerNode>("Key");

            /// <summary>
            /// 字段名：IPAddress - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field IPAddress = new MySoft.Data.Field<ServerNode>("IPAddress");

            /// <summary>
            /// 字段名：Port - 数据类型：Int32
            /// </summary>
            public static MySoft.Data.Field Port = new MySoft.Data.Field<ServerNode>("Port");

            /// <summary>
            /// 字段名：Timeout - 数据类型：Int32
            /// </summary>
            public static MySoft.Data.Field Timeout = new MySoft.Data.Field<ServerNode>("Timeout");

            /// <summary>
            /// 字段名：MaxPool - 数据类型：Int32
            /// </summary>
            public static MySoft.Data.Field MaxPool = new MySoft.Data.Field<ServerNode>("MaxPool");

            /// <summary>
            /// 字段名：MinPool - 数据类型：Int32
            /// </summary>
            public static MySoft.Data.Field MinPool = new MySoft.Data.Field<ServerNode>("MinPool");

            /// <summary>
            /// 字段名：RespType - 数据类型：Int32
            /// </summary>
            public static MySoft.Data.Field RespType = new MySoft.Data.Field<ServerNode>("RespType");

            /// <summary>
            /// 字段名：Compress - 数据类型：Boolean
            /// </summary>
            public static MySoft.Data.Field Compress = new MySoft.Data.Field<ServerNode>("Compress");

            /// <summary>
            /// 字段名：IsDefault - 数据类型：Boolean
            /// </summary>
            public static MySoft.Data.Field IsDefault = new MySoft.Data.Field<ServerNode>("IsDefault");

            /// <summary>
            /// 字段名：AddTime - 数据类型：DateTime
            /// </summary>
            public static MySoft.Data.Field AddTime = new MySoft.Data.Field<ServerNode>("AddTime");
        }
    }
}
namespace MySoft.IoC.DataReport.Models
{
    using System;


    /// <summary>
    /// 表名：ServiceCaller 主键列：Id
    /// </summary>
    [SerializableAttribute()]
    public partial class ServiceCaller : MySoft.Data.Entity
    {

        protected Int32 _Id;

        protected String _AppName;

        protected String _IPAddress;

        protected String _HostName;

        protected String _AppPath;

        protected String _ServiceName;

        protected String _MethodName;

        protected Int32 _CallCount;

        protected Int32 _ElapsedTime;

        protected String _ServerIPAddress;

        protected String _ServerHostName;

        protected Int32 _ServerPort;

        protected DateTime _AddTime;

        public Int32 Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnPropertyValueChange(_.Id, _Id, value);
                this._Id = value;
            }
        }

        public String AppName
        {
            get
            {
                return this._AppName;
            }
            set
            {
                this.OnPropertyValueChange(_.AppName, _AppName, value);
                this._AppName = value;
            }
        }

        public String IPAddress
        {
            get
            {
                return this._IPAddress;
            }
            set
            {
                this.OnPropertyValueChange(_.IPAddress, _IPAddress, value);
                this._IPAddress = value;
            }
        }

        public String HostName
        {
            get
            {
                return this._HostName;
            }
            set
            {
                this.OnPropertyValueChange(_.HostName, _HostName, value);
                this._HostName = value;
            }
        }

        public String AppPath
        {
            get
            {
                return this._AppPath;
            }
            set
            {
                this.OnPropertyValueChange(_.AppPath, _AppPath, value);
                this._AppPath = value;
            }
        }

        public String ServiceName
        {
            get
            {
                return this._ServiceName;
            }
            set
            {
                this.OnPropertyValueChange(_.ServiceName, _ServiceName, value);
                this._ServiceName = value;
            }
        }

        public String MethodName
        {
            get
            {
                return this._MethodName;
            }
            set
            {
                this.OnPropertyValueChange(_.MethodName, _MethodName, value);
                this._MethodName = value;
            }
        }

        public Int32 CallCount
        {
            get
            {
                return this._CallCount;
            }
            set
            {
                this.OnPropertyValueChange(_.CallCount, _CallCount, value);
                this._CallCount = value;
            }
        }

        public Int32 ElapsedTime
        {
            get
            {
                return this._ElapsedTime;
            }
            set
            {
                this.OnPropertyValueChange(_.ElapsedTime, _ElapsedTime, value);
                this._ElapsedTime = value;
            }
        }

        public String ServerIPAddress
        {
            get
            {
                return this._ServerIPAddress;
            }
            set
            {
                this.OnPropertyValueChange(_.ServerIPAddress, _ServerIPAddress, value);
                this._ServerIPAddress = value;
            }
        }

        public String ServerHostName
        {
            get
            {
                return this._ServerHostName;
            }
            set
            {
                this.OnPropertyValueChange(_.ServerHostName, _ServerHostName, value);
                this._ServerHostName = value;
            }
        }

        public Int32 ServerPort
        {
            get
            {
                return this._ServerPort;
            }
            set
            {
                this.OnPropertyValueChange(_.ServerPort, _ServerPort, value);
                this._ServerPort = value;
            }
        }

        public DateTime AddTime
        {
            get
            {
                return this._AddTime;
            }
            set
            {
                this.OnPropertyValueChange(_.AddTime, _AddTime, value);
                this._AddTime = value;
            }
        }

        /// <summary>
        /// 获取实体对应的表名
        /// </summary>
        protected override MySoft.Data.Table GetTable()
        {
            return new MySoft.Data.Table<ServiceCaller>("ServiceCaller");
        }

        /// <summary>
        /// 获取实体中的标识列
        /// </summary>
        protected override MySoft.Data.Field GetIdentityField()
        {
            return _.Id;
        }

        /// <summary>
        /// 获取实体中的主键列
        /// </summary>
        protected override MySoft.Data.Field[] GetPrimaryKeyFields()
        {
            return new MySoft.Data.Field[] {
    					_.Id};
        }

        /// <summary>
        /// 获取列信息
        /// </summary>
        protected override MySoft.Data.Field[] GetFields()
        {
            return new MySoft.Data.Field[] {
    					_.Id,
    					_.AppName,
    					_.IPAddress,
    					_.HostName,
    					_.AppPath,
    					_.ServiceName,
    					_.MethodName,
    					_.CallCount,
    					_.ElapsedTime,
    					_.ServerIPAddress,
    					_.ServerHostName,
    					_.ServerPort,
    					_.AddTime};
        }

        /// <summary>
        /// 获取列数据
        /// </summary>
        protected override object[] GetValues()
        {
            return new object[] {
    					this._Id,
    					this._AppName,
    					this._IPAddress,
    					this._HostName,
    					this._AppPath,
    					this._ServiceName,
    					this._MethodName,
    					this._CallCount,
    					this._ElapsedTime,
    					this._ServerIPAddress,
    					this._ServerHostName,
    					this._ServerPort,
    					this._AddTime};
        }

        /// <summary>
        /// 给当前实体赋值
        /// </summary>
        protected override void SetValues(MySoft.Data.IRowReader reader)
        {
            if ((false == reader.IsDBNull(_.Id)))
            {
                this._Id = reader.GetInt32(_.Id);
            }
            if ((false == reader.IsDBNull(_.AppName)))
            {
                this._AppName = reader.GetString(_.AppName);
            }
            if ((false == reader.IsDBNull(_.IPAddress)))
            {
                this._IPAddress = reader.GetString(_.IPAddress);
            }
            if ((false == reader.IsDBNull(_.HostName)))
            {
                this._HostName = reader.GetString(_.HostName);
            }
            if ((false == reader.IsDBNull(_.AppPath)))
            {
                this._AppPath = reader.GetString(_.AppPath);
            }
            if ((false == reader.IsDBNull(_.ServiceName)))
            {
                this._ServiceName = reader.GetString(_.ServiceName);
            }
            if ((false == reader.IsDBNull(_.MethodName)))
            {
                this._MethodName = reader.GetString(_.MethodName);
            }
            if ((false == reader.IsDBNull(_.CallCount)))
            {
                this._CallCount = reader.GetInt32(_.CallCount);
            }
            if ((false == reader.IsDBNull(_.ElapsedTime)))
            {
                this._ElapsedTime = reader.GetInt32(_.ElapsedTime);
            }
            if ((false == reader.IsDBNull(_.ServerIPAddress)))
            {
                this._ServerIPAddress = reader.GetString(_.ServerIPAddress);
            }
            if ((false == reader.IsDBNull(_.ServerHostName)))
            {
                this._ServerHostName = reader.GetString(_.ServerHostName);
            }
            if ((false == reader.IsDBNull(_.ServerPort)))
            {
                this._ServerPort = reader.GetInt32(_.ServerPort);
            }
            if ((false == reader.IsDBNull(_.AddTime)))
            {
                this._AddTime = reader.GetDateTime(_.AddTime);
            }
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(ServiceCaller).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return false;
        }

        public class _
        {

            /// <summary>
            /// 表示选择所有列，与*等同
            /// </summary>
            public static MySoft.Data.AllField All = new MySoft.Data.AllField<ServiceCaller>();

            /// <summary>
            /// 字段名：Id - 数据类型：Int32
            /// </summary>
            public static MySoft.Data.Field Id = new MySoft.Data.Field<ServiceCaller>("Id");

            /// <summary>
            /// 字段名：AppName - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field AppName = new MySoft.Data.Field<ServiceCaller>("AppName");

            /// <summary>
            /// 字段名：IPAddress - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field IPAddress = new MySoft.Data.Field<ServiceCaller>("IPAddress");

            /// <summary>
            /// 字段名：HostName - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field HostName = new MySoft.Data.Field<ServiceCaller>("HostName");

            /// <summary>
            /// 字段名：AppPath - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field AppPath = new MySoft.Data.Field<ServiceCaller>("AppPath");

            /// <summary>
            /// 字段名：ServiceName - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field ServiceName = new MySoft.Data.Field<ServiceCaller>("ServiceName");

            /// <summary>
            /// 字段名：MethodName - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field MethodName = new MySoft.Data.Field<ServiceCaller>("MethodName");

            /// <summary>
            /// 字段名：CallCount - 数据类型：Int32
            /// </summary>
            public static MySoft.Data.Field CallCount = new MySoft.Data.Field<ServiceCaller>("CallCount");

            /// <summary>
            /// 字段名：ElapsedTime - 数据类型：Int32
            /// </summary>
            public static MySoft.Data.Field ElapsedTime = new MySoft.Data.Field<ServiceCaller>("ElapsedTime");

            /// <summary>
            /// 字段名：ServerIPAddress - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field ServerIPAddress = new MySoft.Data.Field<ServiceCaller>("ServerIPAddress");

            /// <summary>
            /// 字段名：ServerHostName - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field ServerHostName = new MySoft.Data.Field<ServiceCaller>("ServerHostName");

            /// <summary>
            /// 字段名：ServerPort - 数据类型：Int32
            /// </summary>
            public static MySoft.Data.Field ServerPort = new MySoft.Data.Field<ServiceCaller>("ServerPort");

            /// <summary>
            /// 字段名：AddTime - 数据类型：DateTime
            /// </summary>
            public static MySoft.Data.Field AddTime = new MySoft.Data.Field<ServiceCaller>("AddTime");
        }
    }
}
namespace MySoft.IoC.DataReport.Models
{
    using System;


    /// <summary>
    /// 表名：ServiceError 主键列：Id
    /// </summary>
    [SerializableAttribute()]
    public partial class ServiceError : MySoft.Data.Entity
    {

        protected Int32 _Id;

        protected String _AppName;

        protected String _IPAddress;

        protected String _HostName;

        protected String _AppPath;

        protected String _ServiceName;

        protected String _MethodName;

        protected String _Parameters;

        protected DateTime _CallTime;

        protected Int32 _ElapsedTime;

        protected String _ServerIPAddress;

        protected String _ServerHostName;

        protected Int32 _ServerPort;

        protected String _ErrMessage;

        protected DateTime _AddTime;

        public Int32 Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnPropertyValueChange(_.Id, _Id, value);
                this._Id = value;
            }
        }

        public String AppName
        {
            get
            {
                return this._AppName;
            }
            set
            {
                this.OnPropertyValueChange(_.AppName, _AppName, value);
                this._AppName = value;
            }
        }

        public String IPAddress
        {
            get
            {
                return this._IPAddress;
            }
            set
            {
                this.OnPropertyValueChange(_.IPAddress, _IPAddress, value);
                this._IPAddress = value;
            }
        }

        public String HostName
        {
            get
            {
                return this._HostName;
            }
            set
            {
                this.OnPropertyValueChange(_.HostName, _HostName, value);
                this._HostName = value;
            }
        }

        public String AppPath
        {
            get
            {
                return this._AppPath;
            }
            set
            {
                this.OnPropertyValueChange(_.AppPath, _AppPath, value);
                this._AppPath = value;
            }
        }

        public String ServiceName
        {
            get
            {
                return this._ServiceName;
            }
            set
            {
                this.OnPropertyValueChange(_.ServiceName, _ServiceName, value);
                this._ServiceName = value;
            }
        }

        public String MethodName
        {
            get
            {
                return this._MethodName;
            }
            set
            {
                this.OnPropertyValueChange(_.MethodName, _MethodName, value);
                this._MethodName = value;
            }
        }

        public String Parameters
        {
            get
            {
                return this._Parameters;
            }
            set
            {
                this.OnPropertyValueChange(_.Parameters, _Parameters, value);
                this._Parameters = value;
            }
        }

        public DateTime CallTime
        {
            get
            {
                return this._CallTime;
            }
            set
            {
                this.OnPropertyValueChange(_.CallTime, _CallTime, value);
                this._CallTime = value;
            }
        }

        public Int32 ElapsedTime
        {
            get
            {
                return this._ElapsedTime;
            }
            set
            {
                this.OnPropertyValueChange(_.ElapsedTime, _ElapsedTime, value);
                this._ElapsedTime = value;
            }
        }

        public String ServerIPAddress
        {
            get
            {
                return this._ServerIPAddress;
            }
            set
            {
                this.OnPropertyValueChange(_.ServerIPAddress, _ServerIPAddress, value);
                this._ServerIPAddress = value;
            }
        }

        public String ServerHostName
        {
            get
            {
                return this._ServerHostName;
            }
            set
            {
                this.OnPropertyValueChange(_.ServerHostName, _ServerHostName, value);
                this._ServerHostName = value;
            }
        }

        public Int32 ServerPort
        {
            get
            {
                return this._ServerPort;
            }
            set
            {
                this.OnPropertyValueChange(_.ServerPort, _ServerPort, value);
                this._ServerPort = value;
            }
        }

        public String ErrMessage
        {
            get
            {
                return this._ErrMessage;
            }
            set
            {
                this.OnPropertyValueChange(_.ErrMessage, _ErrMessage, value);
                this._ErrMessage = value;
            }
        }

        public DateTime AddTime
        {
            get
            {
                return this._AddTime;
            }
            set
            {
                this.OnPropertyValueChange(_.AddTime, _AddTime, value);
                this._AddTime = value;
            }
        }

        /// <summary>
        /// 获取实体对应的表名
        /// </summary>
        protected override MySoft.Data.Table GetTable()
        {
            return new MySoft.Data.Table<ServiceError>("ServiceError");
        }

        /// <summary>
        /// 获取实体中的标识列
        /// </summary>
        protected override MySoft.Data.Field GetIdentityField()
        {
            return _.Id;
        }

        /// <summary>
        /// 获取实体中的主键列
        /// </summary>
        protected override MySoft.Data.Field[] GetPrimaryKeyFields()
        {
            return new MySoft.Data.Field[] {
    					_.Id};
        }

        /// <summary>
        /// 获取列信息
        /// </summary>
        protected override MySoft.Data.Field[] GetFields()
        {
            return new MySoft.Data.Field[] {
    					_.Id,
    					_.AppName,
    					_.IPAddress,
    					_.HostName,
    					_.AppPath,
    					_.ServiceName,
    					_.MethodName,
    					_.Parameters,
    					_.CallTime,
    					_.ElapsedTime,
    					_.ServerIPAddress,
    					_.ServerHostName,
    					_.ServerPort,
    					_.ErrMessage,
    					_.AddTime};
        }

        /// <summary>
        /// 获取列数据
        /// </summary>
        protected override object[] GetValues()
        {
            return new object[] {
    					this._Id,
    					this._AppName,
    					this._IPAddress,
    					this._HostName,
    					this._AppPath,
    					this._ServiceName,
    					this._MethodName,
    					this._Parameters,
    					this._CallTime,
    					this._ElapsedTime,
    					this._ServerIPAddress,
    					this._ServerHostName,
    					this._ServerPort,
    					this._ErrMessage,
    					this._AddTime};
        }

        /// <summary>
        /// 给当前实体赋值
        /// </summary>
        protected override void SetValues(MySoft.Data.IRowReader reader)
        {
            if ((false == reader.IsDBNull(_.Id)))
            {
                this._Id = reader.GetInt32(_.Id);
            }
            if ((false == reader.IsDBNull(_.AppName)))
            {
                this._AppName = reader.GetString(_.AppName);
            }
            if ((false == reader.IsDBNull(_.IPAddress)))
            {
                this._IPAddress = reader.GetString(_.IPAddress);
            }
            if ((false == reader.IsDBNull(_.HostName)))
            {
                this._HostName = reader.GetString(_.HostName);
            }
            if ((false == reader.IsDBNull(_.AppPath)))
            {
                this._AppPath = reader.GetString(_.AppPath);
            }
            if ((false == reader.IsDBNull(_.ServiceName)))
            {
                this._ServiceName = reader.GetString(_.ServiceName);
            }
            if ((false == reader.IsDBNull(_.MethodName)))
            {
                this._MethodName = reader.GetString(_.MethodName);
            }
            if ((false == reader.IsDBNull(_.Parameters)))
            {
                this._Parameters = reader.GetString(_.Parameters);
            }
            if ((false == reader.IsDBNull(_.CallTime)))
            {
                this._CallTime = reader.GetDateTime(_.CallTime);
            }
            if ((false == reader.IsDBNull(_.ElapsedTime)))
            {
                this._ElapsedTime = reader.GetInt32(_.ElapsedTime);
            }
            if ((false == reader.IsDBNull(_.ServerIPAddress)))
            {
                this._ServerIPAddress = reader.GetString(_.ServerIPAddress);
            }
            if ((false == reader.IsDBNull(_.ServerHostName)))
            {
                this._ServerHostName = reader.GetString(_.ServerHostName);
            }
            if ((false == reader.IsDBNull(_.ServerPort)))
            {
                this._ServerPort = reader.GetInt32(_.ServerPort);
            }
            if ((false == reader.IsDBNull(_.ErrMessage)))
            {
                this._ErrMessage = reader.GetString(_.ErrMessage);
            }
            if ((false == reader.IsDBNull(_.AddTime)))
            {
                this._AddTime = reader.GetDateTime(_.AddTime);
            }
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(ServiceError).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return false;
        }

        public class _
        {

            /// <summary>
            /// 表示选择所有列，与*等同
            /// </summary>
            public static MySoft.Data.AllField All = new MySoft.Data.AllField<ServiceError>();

            /// <summary>
            /// 字段名：Id - 数据类型：Int32
            /// </summary>
            public static MySoft.Data.Field Id = new MySoft.Data.Field<ServiceError>("Id");

            /// <summary>
            /// 字段名：AppName - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field AppName = new MySoft.Data.Field<ServiceError>("AppName");

            /// <summary>
            /// 字段名：IPAddress - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field IPAddress = new MySoft.Data.Field<ServiceError>("IPAddress");

            /// <summary>
            /// 字段名：HostName - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field HostName = new MySoft.Data.Field<ServiceError>("HostName");

            /// <summary>
            /// 字段名：AppPath - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field AppPath = new MySoft.Data.Field<ServiceError>("AppPath");

            /// <summary>
            /// 字段名：ServiceName - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field ServiceName = new MySoft.Data.Field<ServiceError>("ServiceName");

            /// <summary>
            /// 字段名：MethodName - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field MethodName = new MySoft.Data.Field<ServiceError>("MethodName");

            /// <summary>
            /// 字段名：Parameters - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field Parameters = new MySoft.Data.Field<ServiceError>("Parameters");

            /// <summary>
            /// 字段名：CallTime - 数据类型：DateTime
            /// </summary>
            public static MySoft.Data.Field CallTime = new MySoft.Data.Field<ServiceError>("CallTime");

            /// <summary>
            /// 字段名：ElapsedTime - 数据类型：Int32
            /// </summary>
            public static MySoft.Data.Field ElapsedTime = new MySoft.Data.Field<ServiceError>("ElapsedTime");

            /// <summary>
            /// 字段名：ServerIPAddress - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field ServerIPAddress = new MySoft.Data.Field<ServiceError>("ServerIPAddress");

            /// <summary>
            /// 字段名：ServerHostName - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field ServerHostName = new MySoft.Data.Field<ServiceError>("ServerHostName");

            /// <summary>
            /// 字段名：ServerPort - 数据类型：Int32
            /// </summary>
            public static MySoft.Data.Field ServerPort = new MySoft.Data.Field<ServiceError>("ServerPort");

            /// <summary>
            /// 字段名：ErrMessage - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field ErrMessage = new MySoft.Data.Field<ServiceError>("ErrMessage");

            /// <summary>
            /// 字段名：AddTime - 数据类型：DateTime
            /// </summary>
            public static MySoft.Data.Field AddTime = new MySoft.Data.Field<ServiceError>("AddTime");
        }
    }
}
namespace MySoft.IoC.DataReport.Models
{
    using System;


    /// <summary>
    /// 表名：ServiceTimeout 主键列：Id
    /// </summary>
    [SerializableAttribute()]
    public partial class ServiceTimeout : MySoft.Data.Entity
    {

        protected Int32 _Id;

        protected String _AppName;

        protected String _IPAddress;

        protected String _HostName;

        protected String _AppPath;

        protected String _ServiceName;

        protected String _MethodName;

        protected String _Parameters;

        protected DateTime _CallTime;

        protected Int32 _ElapsedTime;

        protected String _ServerIPAddress;

        protected String _ServerHostName;

        protected Int32 _ServerPort;

        protected DateTime _AddTime;

        public Int32 Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this.OnPropertyValueChange(_.Id, _Id, value);
                this._Id = value;
            }
        }

        public String AppName
        {
            get
            {
                return this._AppName;
            }
            set
            {
                this.OnPropertyValueChange(_.AppName, _AppName, value);
                this._AppName = value;
            }
        }

        public String IPAddress
        {
            get
            {
                return this._IPAddress;
            }
            set
            {
                this.OnPropertyValueChange(_.IPAddress, _IPAddress, value);
                this._IPAddress = value;
            }
        }

        public String HostName
        {
            get
            {
                return this._HostName;
            }
            set
            {
                this.OnPropertyValueChange(_.HostName, _HostName, value);
                this._HostName = value;
            }
        }

        public String AppPath
        {
            get
            {
                return this._AppPath;
            }
            set
            {
                this.OnPropertyValueChange(_.AppPath, _AppPath, value);
                this._AppPath = value;
            }
        }

        public String ServiceName
        {
            get
            {
                return this._ServiceName;
            }
            set
            {
                this.OnPropertyValueChange(_.ServiceName, _ServiceName, value);
                this._ServiceName = value;
            }
        }

        public String MethodName
        {
            get
            {
                return this._MethodName;
            }
            set
            {
                this.OnPropertyValueChange(_.MethodName, _MethodName, value);
                this._MethodName = value;
            }
        }

        public String Parameters
        {
            get
            {
                return this._Parameters;
            }
            set
            {
                this.OnPropertyValueChange(_.Parameters, _Parameters, value);
                this._Parameters = value;
            }
        }

        public DateTime CallTime
        {
            get
            {
                return this._CallTime;
            }
            set
            {
                this.OnPropertyValueChange(_.CallTime, _CallTime, value);
                this._CallTime = value;
            }
        }

        public Int32 ElapsedTime
        {
            get
            {
                return this._ElapsedTime;
            }
            set
            {
                this.OnPropertyValueChange(_.ElapsedTime, _ElapsedTime, value);
                this._ElapsedTime = value;
            }
        }

        public String ServerIPAddress
        {
            get
            {
                return this._ServerIPAddress;
            }
            set
            {
                this.OnPropertyValueChange(_.ServerIPAddress, _ServerIPAddress, value);
                this._ServerIPAddress = value;
            }
        }

        public String ServerHostName
        {
            get
            {
                return this._ServerHostName;
            }
            set
            {
                this.OnPropertyValueChange(_.ServerHostName, _ServerHostName, value);
                this._ServerHostName = value;
            }
        }

        public Int32 ServerPort
        {
            get
            {
                return this._ServerPort;
            }
            set
            {
                this.OnPropertyValueChange(_.ServerPort, _ServerPort, value);
                this._ServerPort = value;
            }
        }

        public DateTime AddTime
        {
            get
            {
                return this._AddTime;
            }
            set
            {
                this.OnPropertyValueChange(_.AddTime, _AddTime, value);
                this._AddTime = value;
            }
        }

        /// <summary>
        /// 获取实体对应的表名
        /// </summary>
        protected override MySoft.Data.Table GetTable()
        {
            return new MySoft.Data.Table<ServiceTimeout>("ServiceTimeout");
        }

        /// <summary>
        /// 获取实体中的标识列
        /// </summary>
        protected override MySoft.Data.Field GetIdentityField()
        {
            return _.Id;
        }

        /// <summary>
        /// 获取实体中的主键列
        /// </summary>
        protected override MySoft.Data.Field[] GetPrimaryKeyFields()
        {
            return new MySoft.Data.Field[] {
    					_.Id};
        }

        /// <summary>
        /// 获取列信息
        /// </summary>
        protected override MySoft.Data.Field[] GetFields()
        {
            return new MySoft.Data.Field[] {
    					_.Id,
    					_.AppName,
    					_.IPAddress,
    					_.HostName,
    					_.AppPath,
    					_.ServiceName,
    					_.MethodName,
    					_.Parameters,
    					_.CallTime,
    					_.ElapsedTime,
    					_.ServerIPAddress,
    					_.ServerHostName,
    					_.ServerPort,
    					_.AddTime};
        }

        /// <summary>
        /// 获取列数据
        /// </summary>
        protected override object[] GetValues()
        {
            return new object[] {
    					this._Id,
    					this._AppName,
    					this._IPAddress,
    					this._HostName,
    					this._AppPath,
    					this._ServiceName,
    					this._MethodName,
    					this._Parameters,
    					this._CallTime,
    					this._ElapsedTime,
    					this._ServerIPAddress,
    					this._ServerHostName,
    					this._ServerPort,
    					this._AddTime};
        }

        /// <summary>
        /// 给当前实体赋值
        /// </summary>
        protected override void SetValues(MySoft.Data.IRowReader reader)
        {
            if ((false == reader.IsDBNull(_.Id)))
            {
                this._Id = reader.GetInt32(_.Id);
            }
            if ((false == reader.IsDBNull(_.AppName)))
            {
                this._AppName = reader.GetString(_.AppName);
            }
            if ((false == reader.IsDBNull(_.IPAddress)))
            {
                this._IPAddress = reader.GetString(_.IPAddress);
            }
            if ((false == reader.IsDBNull(_.HostName)))
            {
                this._HostName = reader.GetString(_.HostName);
            }
            if ((false == reader.IsDBNull(_.AppPath)))
            {
                this._AppPath = reader.GetString(_.AppPath);
            }
            if ((false == reader.IsDBNull(_.ServiceName)))
            {
                this._ServiceName = reader.GetString(_.ServiceName);
            }
            if ((false == reader.IsDBNull(_.MethodName)))
            {
                this._MethodName = reader.GetString(_.MethodName);
            }
            if ((false == reader.IsDBNull(_.Parameters)))
            {
                this._Parameters = reader.GetString(_.Parameters);
            }
            if ((false == reader.IsDBNull(_.CallTime)))
            {
                this._CallTime = reader.GetDateTime(_.CallTime);
            }
            if ((false == reader.IsDBNull(_.ElapsedTime)))
            {
                this._ElapsedTime = reader.GetInt32(_.ElapsedTime);
            }
            if ((false == reader.IsDBNull(_.ServerIPAddress)))
            {
                this._ServerIPAddress = reader.GetString(_.ServerIPAddress);
            }
            if ((false == reader.IsDBNull(_.ServerHostName)))
            {
                this._ServerHostName = reader.GetString(_.ServerHostName);
            }
            if ((false == reader.IsDBNull(_.ServerPort)))
            {
                this._ServerPort = reader.GetInt32(_.ServerPort);
            }
            if ((false == reader.IsDBNull(_.AddTime)))
            {
                this._AddTime = reader.GetDateTime(_.AddTime);
            }
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(ServiceTimeout).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return false;
        }

        public class _
        {

            /// <summary>
            /// 表示选择所有列，与*等同
            /// </summary>
            public static MySoft.Data.AllField All = new MySoft.Data.AllField<ServiceTimeout>();

            /// <summary>
            /// 字段名：Id - 数据类型：Int32
            /// </summary>
            public static MySoft.Data.Field Id = new MySoft.Data.Field<ServiceTimeout>("Id");

            /// <summary>
            /// 字段名：AppName - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field AppName = new MySoft.Data.Field<ServiceTimeout>("AppName");

            /// <summary>
            /// 字段名：IPAddress - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field IPAddress = new MySoft.Data.Field<ServiceTimeout>("IPAddress");

            /// <summary>
            /// 字段名：HostName - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field HostName = new MySoft.Data.Field<ServiceTimeout>("HostName");

            /// <summary>
            /// 字段名：AppPath - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field AppPath = new MySoft.Data.Field<ServiceTimeout>("AppPath");

            /// <summary>
            /// 字段名：ServiceName - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field ServiceName = new MySoft.Data.Field<ServiceTimeout>("ServiceName");

            /// <summary>
            /// 字段名：MethodName - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field MethodName = new MySoft.Data.Field<ServiceTimeout>("MethodName");

            /// <summary>
            /// 字段名：Parameters - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field Parameters = new MySoft.Data.Field<ServiceTimeout>("Parameters");

            /// <summary>
            /// 字段名：CallTime - 数据类型：DateTime
            /// </summary>
            public static MySoft.Data.Field CallTime = new MySoft.Data.Field<ServiceTimeout>("CallTime");

            /// <summary>
            /// 字段名：ElapsedTime - 数据类型：Int32
            /// </summary>
            public static MySoft.Data.Field ElapsedTime = new MySoft.Data.Field<ServiceTimeout>("ElapsedTime");

            /// <summary>
            /// 字段名：ServerIPAddress - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field ServerIPAddress = new MySoft.Data.Field<ServiceTimeout>("ServerIPAddress");

            /// <summary>
            /// 字段名：ServerHostName - 数据类型：String
            /// </summary>
            public static MySoft.Data.Field ServerHostName = new MySoft.Data.Field<ServiceTimeout>("ServerHostName");

            /// <summary>
            /// 字段名：ServerPort - 数据类型：Int32
            /// </summary>
            public static MySoft.Data.Field ServerPort = new MySoft.Data.Field<ServiceTimeout>("ServerPort");

            /// <summary>
            /// 字段名：AddTime - 数据类型：DateTime
            /// </summary>
            public static MySoft.Data.Field AddTime = new MySoft.Data.Field<ServiceTimeout>("AddTime");
        }
    }
}